diff --git a/mentor_app.py b/mentor_app.py
index e3feb755cc1ba2f656f5470f8c81455d7443d159..2ea9d19ae151e2004ca2150942652a2748a720d8 100644
--- a/mentor_app.py
+++ b/mentor_app.py
@@ -153,73 +153,87 @@ if user_input:
     if st.session_state.state == "awaiting_team_input":
         if is_first and agenda and response.lower() != "yes":
             add_mentor_message("Please type exactly: `Yes` to start the meeting.")
             st.rerun()
 
         snippets = []
         context_msgs = []
         if response and not (is_first and agenda):
             snippets = search_books(response)
             if snippets:
                 excerpts = "\n---\n".join(snippets)
                 context_msgs.append({"role": "system", "content": "Relevant book excerpts:\n" + excerpts})
             resp = client.chat.completions.create(
                 model="gpt-4o",
                 messages=[MENTOR_SYSTEM_PROMPT] + context_msgs + st.session_state.history[1:],
                 temperature=0.7,
             )
             mentor_reply = resp.choices[0].message.content
             add_mentor_message(mentor_reply)
 
         if agenda:
             if is_first and response.lower() == "yes":
                 next_title = agenda[1]["title"] if len(agenda) > 1 else "next step"
                 add_mentor_message(
                     f"Great - lets get this meeting started then, I am excited to be working with you today. Type Next and we can move into the {next_title} step"
-                 )
+                )
+                st.session_state.state = "awaiting_next_action"
             else:
-                add_mentor_message(
-                    "Would you like to move to the next stage of the agenda or continue to discuss this topic further?\n\n"
-                    "ðŸ‘‰ Type your next comment, reply or question to continue, or type **Next** to move on."
-                )                   
-            st.session_state.state = "awaiting_next_action"
+                if (
+                    st.session_state.get("meeting_type") == "General_conversation"
+                    and st.session_state.step > 0
+                ):
+                    st.session_state.state = "awaiting_team_input"
+                else:
+                    add_mentor_message(
+                        "Would you like to move to the next stage of the agenda or continue to discuss this topic further?\n\n"
+                        "ðŸ‘‰ Type your next comment, reply or question to continue, or type **Next** to move on."
+                    )
+                    st.session_state.state = "awaiting_next_action"
+            st.rerun()
         else:
             st.session_state.state = "awaiting_team_input"
-        st.rerun()
+            st.rerun()
 
     if st.session_state.state == "awaiting_next_action":
         if response.lower() in ["next", "yes", "continue", "go next", "y"] and agenda:
             if st.session_state.step < len(agenda) - 1:
                 st.session_state.step += 1
                 st.session_state.state = "awaiting_agenda_prompt"
                 st.rerun()
             else:
                 add_mentor_message(
                     "Meeting complete! Thank you for your participation. ðŸŽ‰.\n\n"
                     "Click Next again and you will be taken to the Google form to complete at the end of every mentor meeting"
                 )
                 st.session_state.state = "meeting_done"
                 st.rerun()
         else:
             snippets = search_books(response)
             context_msgs = []
             if snippets:
                 excerpts = "\n---\n".join(snippets)
                 context_msgs.append({"role": "system", "content": "Relevant book excerpts:\n" + excerpts})
             resp = client.chat.completions.create(
                 model="gpt-4o",
                 messages=[MENTOR_SYSTEM_PROMPT] + context_msgs + st.session_state.history[1:],
                 temperature=0.7,
             )
             mentor_reply = resp.choices[0].message.content
             add_mentor_message(mentor_reply)
-            add_mentor_message(
-                "Would you like to keep discussing, or move to the next step?\n\n"
-                "Type your next comment, or **Next** to move on."
-            )
+            if (
+                st.session_state.get("meeting_type") == "General_conversation"
+                and st.session_state.step > 0
+            ):
+                st.session_state.state = "awaiting_team_input"
+            else:
+                add_mentor_message(
+                    "Would you like to keep discussing, or move to the next step?\n\n"
+                    "Type your next comment, or **Next** to move on."
+                )
             st.rerun()
 
     if st.session_state.state == "meeting_done":
         st.info(
             "This meeting is finished! You can review the chat above or close the page\n\n "
             "Please complete the post meeting Google form https://docs.google.com/forms/d/e/1FAIpQLSc0QN87pDYQVamKVpYtUQyfO9qPq0CWrMjc5-kqLMZ4HawILg/viewform?usp=preview"
         )
